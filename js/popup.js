document.addEventListener('DOMContentLoaded', () => {
    let popupElement = null;
    let longTextTimeout = null;

    // Funkce pro vytvo≈ôen√≠ a zobrazen√≠ pop-upu, proto≈æe kdo by nechtƒõl otravn√Ω tooltip? üòè
    function showPopup(targetElement, event) {
        // Pokud u≈æ nƒõjak√Ω popup stra≈°√≠ na str√°nce, zmasakrujeme ho
        if (popupElement) {
            hidePopup();
        }

        const shortText = targetElement.dataset.short;
        const longText = targetElement.dataset.long;

        if (!shortText) {
            console.warn("≈Ω√°dn√Ω kr√°tk√Ω text? Co to m√° b√Ωt za tooltip, ty lenochu! üòí");
            return;
        }

        // Vytvo≈ô√≠me si pƒõkn√Ω popup, kter√Ω bude dƒõsit u≈æivatele
        popupElement = document.createElement('div');
        popupElement.className = 'popup-container';
        
        const content = document.createElement('p');
        content.className = 'popup-text';
        content.textContent = shortText;
        
        popupElement.appendChild(content);
        document.body.appendChild(popupElement);

        // Um√≠st√≠me ten mal√Ω otravn√Ω box√≠k a uk√°≈æeme ho svƒõtu
        updatePopupPosition(event);
        popupElement.style.opacity = '1';

        // Posluchaƒçi na pohyb my≈°i a scroll, proto≈æe u≈æivatel mus√≠ trpƒõt üòà
        document.addEventListener('mousemove', updatePopupPosition);
        window.addEventListener('scroll', hidePopup, { once: true }); // Jedno scrollov√°n√≠ a je po z√°bavƒõ

        // ƒåasovaƒç na dlouh√Ω text, proto≈æe ƒçekat 3,5 vte≈ôiny je tak akor√°t k vzteku
        if (longText) {
            longTextTimeout = setTimeout(() => {
                if (popupElement) {
                    content.textContent = longText;
                    updatePopupPosition(event); // P≈ôepoƒç√≠t√°me, aby se to ve≈°lo, nebo a≈• to pƒõknƒõ p≈ôeteƒçe üòú
                }
            }, 3500);
        }
    }

    // Funkce na zobrazen√≠ dlouh√©ho textu po kliknut√≠, proto≈æe my≈° je kr√°l! üñ±Ô∏è
    function showLongTextOnClick(targetElement, event) {
        if (!popupElement) {
            showPopup(targetElement, event); // Vytvo≈ô√≠me popup, kdy≈æ je≈°tƒõ neexistuje
        }
        const longText = targetElement.dataset.long;
        if (longText && popupElement) {
            clearTimeout(longTextTimeout); // ≈Ω√°dn√Ω ƒçasovaƒç, klik je ≈°√©f! üòé
            popupElement.querySelector('.popup-text').textContent = longText;
            updatePopupPosition(event); // P≈ôepozicujeme, a≈• to nen√≠ nƒõkde v Narnii
        } else if (!longText) {
            console.warn("≈Ω√°dn√Ω dlouh√Ω text? Proƒç mƒõ v≈Øbec vol√°≈°, ƒçlovƒõƒçe? ü§¶‚Äç‚ôÇÔ∏è");
        }
    }

    // Funkce pro skryt√≠ pop-upu, a≈• m√° u≈æivatel chv√≠li klid
    function hidePopup() {
        if (popupElement) {
            popupElement.remove();
            popupElement = null;
            console.log("Popup je mrtv√Ω! A≈• ≈æije klid! ü™¶");
        }
        clearTimeout(longTextTimeout); // Uklid√≠me ƒçasovaƒç, a≈• nestra≈°√≠
        document.removeEventListener('mousemove', updatePopupPosition);
        window.removeEventListener('scroll', hidePopup); // Pro jistotu, a≈• je ƒçisto
    }

    // Funkce na aktualizaci pozice, proto≈æe my≈° je rychlej≈°√≠ ne≈æ tv≈Øj k√≥d üòè
    function updatePopupPosition(event) {
        if (!popupElement) return;
    
        // Z√≠sk√°me rozmƒõry okna a popupu
        const padding = 10;
        const popupWidth = popupElement.offsetWidth;
        const popupHeight = popupElement.offsetHeight;
        const viewportWidth = window.innerWidth;
        const viewportHeight = window.innerHeight;
    
        let x = event.clientX + 15;
        let y = event.clientY + 15;
    
        // Horizont√°ln√≠ korekce ‚Äì pokud by popup p≈ôetekl vpravo
        if (x + popupWidth + padding > viewportWidth) {
            x = viewportWidth - popupWidth - padding;
        }
        // Pokud by popup p≈ôetekl vlevo (extr√©mnƒõ velk√Ω popup u okraje)
        if (x < padding) {
            x = padding;
        }
    
        // Vertik√°ln√≠ korekce ‚Äì pokud by popup p≈ôetekl dol≈Ø
        if (y + popupHeight + padding > viewportHeight) {
            y = viewportHeight - popupHeight - padding;
        }
        // Pokud by popup p≈ôetekl nahoru (extr√©mnƒõ velk√Ω popup u horn√≠ho okraje)
        if (y < padding) {
            y = padding;
        }
    
        popupElement.style.left = `${x}px`;
        popupElement.style.top = `${y}px`;
    }

    // Delegov√°n√≠ ud√°lost√≠, proto≈æe dynamick√© elementy jsou jako koƒçky ‚Äì neposlu≈°n√© üòº
    document.body.addEventListener('mouseover', (event) => {
        const target = event.target.closest('.popup-tip');
        if (target) {
            showPopup(target, event);
        }
    });

    document.body.addEventListener('mouseout', (event) => {
        const target = event.target.closest('.popup-tip');
        if (target) {
            hidePopup();
        }
    });

    // Nov√Ω posluchaƒç na kliknut√≠, proto≈æe my≈° si zaslou≈æ√≠ v√≠c akce! üñ±Ô∏è
    document.body.addEventListener('click', (event) => {
        const target = event.target.closest('.popup-tip');
        if (target) {
            showLongTextOnClick(target, event);
        }
    });
});