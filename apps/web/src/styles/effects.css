/* Efekty dle kanonu. Fallback přes CSS + canvas overlay pro noise. */

/* pulseWave — jemné zvlnění v cyan */
@keyframes pulseWave {
  0% { box-shadow: 0 0 0 0 rgba(0, 255, 255, 0.35); }
  70% { box-shadow: 0 0 0 18px rgba(0, 255, 255, 0); }
  100% { box-shadow: 0 0 0 0 rgba(0, 255, 255, 0); }
}
.effect-pulseWave {
  position: relative;
  border: 1px solid var(--c-neon-cyan);
}
.effect-pulseWave::after {
  content: '';
  position: absolute; inset: 0; border-radius: 12px;
  animation: pulseWave 2.6s ease-out infinite;
}

/* riftGlow — magenta prstenec + chromatic aberace (text/box) */
@keyframes riftGlow {
  0%, 100% { filter: hue-rotate(0deg) saturate(1.1); }
  50% { filter: hue-rotate(3deg) saturate(1.4); }
}
.effect-riftGlow {
  color: var(--c-glitch-magenta);
  text-shadow: 0 0 6px rgba(255,0,255,0.5), 1px 0 rgba(0,255,255,0.1), -1px 0 rgba(246,255,0,0.08);
  box-shadow: 0 0 12px rgba(255,0,255,0.25) inset, 0 0 24px rgba(255,0,255,0.18);
  animation: riftGlow 1.8s ease-in-out infinite;
}

/* kernelBlink — acid žluté varování */
@keyframes kernelBlink {
  0%, 20% { outline-color: transparent; background: rgba(246,255,0,0.06); }
  21%, 30% { outline-color: var(--c-acid-yellow); background: rgba(246,255,0,0.16); }
  31%, 100% { outline-color: transparent; background: rgba(246,255,0,0.06); }
}
.effect-kernelBlink {
  outline: 2px solid transparent;
  animation: kernelBlink 2.2s steps(10, end) infinite;
}

/* fogNoise — noise overlay + jemný parallax */
@keyframes fogNoise {
  0% { background-position: 0 0, 0 0; }
  50% { background-position: 50px 30px, -20px 10px; }
  100% { background-position: 0 0, 0 0; }
}
.effect-fogNoise {
  position: relative;
  overflow: hidden;
}
.effect-fogNoise::before {
  content: '';
  position: absolute; inset: -10%; pointer-events: none;
  background-image:
    radial-gradient(circle at 20% 30%, rgba(192,250,255,0.10), transparent 40%),
    radial-gradient(circle at 80% 70%, rgba(192,250,255,0.08), transparent 50%);
  mix-blend-mode: screen;
  opacity: 1;
  animation: fogNoise 9s ease-in-out infinite;
}
.effect-fogNoise::after {
  content: '';
  position: absolute; inset: 0; pointer-events: none;
  background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="160" height="160" viewBox="0 0 160 160"><filter id="n"><feTurbulence type="fractalNoise" baseFrequency="0.8" numOctaves="2" stitchTiles="stitch"/></filter><rect width="100%" height="100%" filter="url(%23n)" opacity="0.35"/></svg>');
  opacity: var(--noise-opacity);
}

/* CRT (LoreBookTerminal) – flicker + scanlines */
@keyframes crtFlicker { 0%, 100% { opacity: 0.98; } 50% { opacity: 1; } }
.effect-crtTerminal {
  position: relative;
  background: rgba(0, 13, 26, 0.6);
  border: 1px solid rgba(0, 255, 255, 0.2);
  padding: 16px;
  color: var(--c-ghost-white);
  text-shadow: 0 0 2px rgba(0,255,255,0.3);
  animation: crtFlicker 2.6s steps(30, end) infinite;
}
.effect-crtTerminal::before {
  /* scanlines */
  content: '';
  position: absolute; inset: 0; pointer-events: none;
  background: repeating-linear-gradient(
    to bottom,
    rgba(0,0,0,0.0) 0px,
    rgba(0,0,0,0.0) 2px,
    rgba(255,255,255,0.04) 3px,
    rgba(0,0,0,0.0) 4px
  );
  mix-blend-mode: overlay;
}

/* Typewriter pro demo textu */
/* Animaci aplikujeme na vnitřní span, aby se šířka vztahovala k textu, ne k celé řádce. */
.noising-text {
  /* Stabilní box i po skončení psaní, ať to neškubne o 2px (caret) */
  display: inline-block;
  white-space: normal;
  border-right: 2px solid transparent; /* rezervuj místo pro caret trvale */
}
.SYNTHOMAREADER .tw-line.typewriter,
.SYNTHOMAREADER .typewriter {
  /* Během psaní nech pod řádkem trochu vzduchu, ať to není nalepené na spodku readeru */
  margin-bottom: 1.2rem;
}
.typewriter .noising-text {
  display: inline-block;
  overflow: hidden;
  white-space: normal; /* umožni zalomení podle viewportu */
  border-right: 2px solid var(--c-neon-cyan);
  /* Reveal přes clip-path funguje i na více řádcích */
  animation: reveal var(--typewriter-duration, 6s) steps(var(--typewriter-steps, 60)) both,
             caret var(--caret-duration, 1.2s) steps(1) infinite;
}
@keyframes reveal { from { clip-path: inset(0 100% 0 0); } to { clip-path: inset(0 0 0 0); } }
/* Reintroduce classic typing for hero to keep single-line typing */
@keyframes typing { from { width: 0 } to { width: 100% } }
@keyframes caret { 50% { border-color: transparent } }

/* Respektuj vypnutí animací */
.no-animations .typewriter .noising-text {
  animation: none !important;
}

/* Hero manifest: JS-driven typing by words. Allow wrap, forbid mid-word breaks, no caret */
.hero-intro .typewriter .noising-text {
  display: inline;
  white-space: normal !important;
  border-right: 0 !important;
  word-break: keep-all;
  overflow-wrap: normal;
  -webkit-hyphens: manual;
  hyphens: manual;
  animation: none !important;
}

/* Typing glitch micro-effect per newly typed character */
.tw-char { display: inline; position: relative; will-change: filter, transform; }
.tw-char.tw-glitch {
  animation: twGlitchIn .14s ease-out both;
  filter: brightness(1.35);
}
.tw-char.tw-split {
  animation: twSplit .1s ease-out both;
}

@keyframes twGlitchIn {
  0% { text-shadow: 1px 0 var(--accent-primary), -1px 0 var(--accent-secondary); transform: translateY(-1px) skewX(3deg); filter: blur(.3px) brightness(1.6); }
  50% { text-shadow: -1px 0 var(--accent-secondary), 1px 0 var(--accent-primary); transform: translateY(1px) skewX(-2deg); filter: blur(.2px) brightness(1.4); }
  100% { text-shadow: none; transform: none; filter: none; }
}

@keyframes twSplit {
  0% { text-shadow: 2px 0 var(--accent-primary), -2px 0 var(--accent-secondary); transform: translateX(-.5px) skewX(2deg); }
  100% { text-shadow: none; transform: none; }
}

/* Container blip to simulate scanline/chromatic blip */
.noising-text.tw-blip {
  animation: twBlip .14s ease-out both;
}
@keyframes twBlip {
  0% { text-shadow: 2px 0 var(--accent-secondary), -2px 0 var(--accent-primary); filter: brightness(1.2) contrast(1.05); }
  100% { text-shadow: none; filter: none; }
}

@media (prefers-reduced-motion: reduce) {
  .typewriter .noising-text { animation: none !important; border-right: none; }
}

/* Reader-scoped override: zajisti viditelný caret uvnitř SYNTHOMAREADER
   – přebil jsem hero-intro i jiné obecné styly, ale respektuji reduced motion. */
.SYNTHOMAREADER .typewriter .noising-text {
  animation: caret var(--caret-duration, 1.2s) steps(1) infinite !important;
  border-right: 2px solid var(--c-neon-cyan) !important;
}
@media (prefers-reduced-motion: reduce) {
  .SYNTHOMAREADER .typewriter .noising-text { animation: none !important; border-right: none !important; }
}

/* --- Neon Shining for manifest characters --- */
/* Base char node used by typewriter and shining manager */
.noising-char {
  position: relative;
  display: inline;
  will-change: filter, text-shadow, opacity;
  transition: text-shadow 160ms ease, filter 160ms ease, opacity 120ms ease;
}

/* Continuous subtle shine when animations are allowed */
.noising-char.noising {
  text-shadow:
    0 0 1px rgba(255,255,255,0.22),
    0 0 5px var(--accent-primary),
    0 0 10px var(--accent-secondary),
    0 0 14px var(--accent-secondary);
  filter: brightness(1.02) contrast(1.05);
  will-change: text-shadow, filter;
  animation: neonShine 3.2s ease-in-out infinite;
}

@keyframes neonShine {
  0%, 100% { filter: brightness(1.0) contrast(1.0) saturate(1.0); }
  50% { filter: brightness(1.12) contrast(1.08) saturate(1.08); }
}

/* Short bursts triggered from JS for random characters */
.noising-char.flickering {
  text-shadow:
    0 0 2px rgba(255,255,255,0.3),
    0 0 7px var(--accent-primary),
    0 0 14px var(--accent-secondary),
    0 0 20px var(--accent-secondary);
  filter: brightness(1.35) contrast(1.08) saturate(1.06);
  animation: neonFlicker 0.32s steps(2) 1;
}

@keyframes neonFlicker {
  0%, 100% { opacity: 1; }
  30% { opacity: 0.72; }
  60% { opacity: 0.88; }
}

/* Short noising pulse independent from base shine */
.noising-char.noising-burst {
  animation: neonNoising 0.28s ease-in-out 1;
}

@keyframes neonNoising {
  0% {
    text-shadow:
      0 0 2px rgba(255,255,255,0.35),
      0 0 8px var(--accent-primary),
      0 0 16px var(--accent-secondary),
      0 0 22px var(--accent-secondary);
    filter: brightness(1.22) contrast(1.12) saturate(1.1);
  }
  100% {
    text-shadow:
      0 0 1px rgba(255,255,255,0.22),
      0 0 5px var(--accent-primary),
      0 0 10px var(--accent-secondary);
    filter: none;
  }
}

/* Respect global animation kill switch */
body:not(.force-shine) .no-animations .noising-char {
  animation: none !important;
  filter: none !important;
}
body:not(.force-shine) .no-animations .noising-char:not(.noising-static) {
  text-shadow: none !important;
}
body:not(.force-shine) .no-animations .noising-char.noising-static {
  /* static, non-animated glow for accessibility mode */
  text-shadow:
    0 0 1px rgba(255,255,255,0.18),
    0 0 4px var(--accent-primary),
    0 0 8px var(--accent-secondary);
}

@media (prefers-reduced-motion: reduce) {
  body:not(.force-shine) .noising-char { animation: none !important; }
  body:not(.force-shine) .noising-char.noising,
  body:not(.force-shine) .noising-char.flickering { animation: none !important; }
}
